async function fetchConfigAndInit() { try { const t = "https://growthatkyte.github.io/web/scripts/landing-pages-list.json", e = await fetch(t); if (!e.ok) throw new Error("Failed to load landing pages configuration"); const o = await e.json(); document.addEventListener("DOMContentLoaded", (() => { applyRedirectClasses(o), loadScript("https://cdn.kyteapp.com/$web/kyte-analytics-short-unique-id.js", (() => console.log("Tracking initialized"))) })), document.addEventListener("click", (t => handleRedirection(t, o))) } catch (t) { console.error("Error initializing landing pages:", t) } } function applyRedirectClasses(t) { const e = window.location.pathname, o = e.endsWith("/") ? e : `${e}/`, n = document.querySelectorAll('input[type="submit"], button[type="submit"]'); Object.keys(t).forEach((e => { if (e === o) { const i = t[e].redirectClass; n.forEach((t => t.classList.add(i))), console.log(`Redirect class ${i} applied to buttons on ${o}`) } })) } function handleRedirection(t, e) { const o = t.target; if (o.matches(".catalog-redir, .control-redir, .cpp-redir")) { t.preventDefault(); const n = e[window.location.pathname.endsWith("/") ? window.location.pathname : `${window.location.pathname}/`]; if (!n) return void console.error("No config found for this page."); constructAndRedirect(n, extractAndStoreUTMParams(), o.classList.contains("cpp-redir")) } } function extractAndStoreUTMParams() { let t = { utm_source: document.referrer ? new URL(document.referrer).hostname : "direct", utm_medium: "landing-pages", utm_campaign: window.location.pathname.replace(/^\//, "").replace(/\/$/, "").replace(/\//g, "_"), utm_content: "", utm_term: "" }; const e = new URLSearchParams(window.location.search); for (let o of ["utm_source", "utm_medium", "utm_campaign", "utm_term", "utm_content"]) e.has(o) && (t[o] = e.get(o)); return Object.keys(t).forEach((e => localStorage.setItem(e, t[e]))), t } function isMobileDevice() { return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) } function isIOSDevice() { return /iPad|iPhone|iPod/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 } function constructAndRedirect(t, e, o) { const n = "https://web.kyteapp.com/login", i = `utm_source=${e.utm_source}&utm_medium=${e.utm_medium}&utm_campaign=${e.utm_campaign}`, a = encodeURIComponent(`${n}?${i}`); let c; if (o) isMobileDevice() ? window.location.href = isIOSDevice() ? t.ios : t.android : c = `${n}?${i}`; else { let o = t.redirectClass, n = "control-redir" === o ? "com.kytecontrol" : "catalog-redir" === o ? "com.kyte.catalog" : "com.kyte", i = "control-redir" === o ? "com.kytecontrol" : "catalog-redir" === o ? "com.kytecatalog" : "com.kytepos", r = "control-redir" === o ? "6472947922" : "catalog-redir" === o ? "6462521196" : "1345983058", s = `${o}_${e.utm_campaign}`; c = `https://kyteapp.page.link/?link=${a}&apn=${n}&ibi=${i}&isi=${r}&utm_source=${e.utm_source}&utm_medium=${e.utm_medium}&utm_campaign=${e.utm_campaign}&pt=120346822&ct=${s}&mt=8` } window.location.href = c } fetchConfigAndInit();