async function initializeLandingPageRedirection() { try { const t = "https://growthatkyte.github.io/web/scripts/landing-pages-list.json", i = await fetch(t); if (!i.ok) throw new Error("Failed to fetch landing pages configuration"); const e = await i.json(), n = getUTMParams(); if (n.utm_campaign.includes("slg")) { const t = "https://checkout.auth.kyteapp.com", i = new URLSearchParams(n).toString(); return void (window.location.href = `${t}?${i}`) } "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", (() => applyClasses(e))) : applyClasses(e), document.addEventListener("click", (t => { const i = t.target.closest('input[type="submit"], button[type="submit"]'); i && (i.classList.contains("catalog-redir") || i.classList.contains("cpp-redir") || i.classList.contains("control-redir")) && (t.preventDefault(), handleRedirection(i, e)) })) } catch (t) { console.error("Initialization failed:", t) } } function normalizePath(t) { return t.endsWith("/") ? t.slice(0, -1) : t } function applyClasses(t) { const i = normalizePath(window.location.pathname); document.querySelectorAll('input[type="submit"], button[type="submit"]').forEach((e => { const n = Object.keys(t).find((t => normalizePath(t) === i)), a = n ? t[n].redirectClass : "default-redir"; e.classList.add(a), console.log(`Applied '${a}' to buttons for path: ${i}`) })) } function handleRedirection(t, i) { const e = normalizePath(window.location.pathname), n = t.classList.contains("catalog-redir") || t.classList.contains("cpp-redir") || t.classList.contains("control-redir") ? t.className : "default-redir", a = i[e] || appConfig[n]; if (!a) return void console.error("Configuration missing for this page:", e); redirectUser(a, getUTMParams(), t.classList.contains("cpp-redir")) } function getUTMParams() { const t = new URLSearchParams(location.search), i = {}, e = normalizePath(window.location.pathname.substring(1)); return ["utm_source", "utm_medium", "utm_campaign", "utm_content", "utm_term"].forEach((n => { i[n] = t.get(n) || ("utm_campaign" === n ? e : "") })), i } function redirectUser(t, i, e) { const n = e ? handleCPPRedirection(t, isMobileDevice()) : createDynamicLink(t.redirectClass, i); window.location.href = n } const appConfig = { "catalog-redir": { apn: "com.kyte.catalog", ibi: "com.kytecatalog", isi: "6462521196" }, "control-redir": { apn: "com.kytecontrol", ibi: "com.kytecontrol", isi: "6472947922" }, default: { apn: "com.kyte", ibi: "com.kytepos", isi: "1345983058" } }; function createDynamicLink(t, i) { const e = `https://web.auth.kyteapp.com?${new URLSearchParams(i).toString()}`, { apn: n, ibi: a, isi: o } = appConfig[t] || appConfig.default; return `https://kyteapp.page.link/?${`link=${encodeURIComponent(e)}&apn=${n}&ibi=${a}&isi=${o}&ct=${t}_${i.utm_campaign}`}` } function handleCPPRedirection(t, i) { if ("cpp-redir" === t.redirectClass) { if (!i) { return `https://web.auth.kyteapp.com?${new URLSearchParams(getUTMParams()).toString()}` } return isIOSDevice() ? t.ios : t.android } return createDynamicLink(t.redirectClass, getUTMParams()) } function isMobileDevice() { return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) } function isIOSDevice() { return /iPad|iPhone|iPod/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 } function loadScript(t, i) { const e = document.createElement("script"); e.src = t, e.onload = i, document.head.appendChild(e) } initializeLandingPageRedirection();