async function initializeLandingPageRedirection() { try { const t = await fetchConfig(); "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", (() => applyClasses(t))) : applyClasses(t), setupClickHandler(t) } catch (t) { console.error("Initialization failed:", t) } } async function fetchConfig() { const t = await fetch("https://growthatkyte.github.io/web/scripts/landing-pages-list.json"); if (!t.ok) throw new Error("Failed to fetch landing pages configuration"); return t.json() } function applyClasses(t) { const i = normalizePath(window.location.pathname); document.querySelectorAll('input[type="submit"], button[type="submit"]').forEach((n => { t[i] && (n.classList.add(t[i].redirectClass), console.log(`Applied '${t[i].redirectClass}' to buttons for path: ${i}`)) })) } function setupClickHandler(t) { document.addEventListener("click", (i => { const n = i.target.closest('input[type="submit"], button[type="submit"]'); n && (i.preventDefault(), handleRedirection(t, getUTMParams(), n)) })) } function handleRedirection(t, i, n) { const e = t[normalizePath(window.location.pathname)] || appConfig.default, a = n.classList.contains("cpp-redir") ? "cpp-redir" : n.classList.contains("catalog-redir") ? "catalog-redir" : n.classList.contains("control-redir") ? "control-redir" : "default", o = "cpp-redir" === a ? handleCPPRedirection(e, i) : createDynamicLink(a, i); window.location.href = o } function createDynamicLink(t, i) { const { apn: n, ibi: e, isi: a } = appConfig[t], o = new URLSearchParams(i).toString(), c = `https://web.auth.kyteapp.com?${encodeURIComponent(o)}`; return `https://kyteapp.page.link/?${new URLSearchParams({ link: c, apn: n, ibi: e, isi: a, ct: `${t}_${i.utm_campaign}` }).toString()}` } function handleCPPRedirection(t, i) { return isMobileDevice() ? isIOSDevice() ? t.ios : t.android : `https://web.auth.kyteapp.com?${new URLSearchParams(i).toString()}` } function normalizePath(t) { return t.endsWith("/") ? t.slice(0, -1) : t } function getUTMParams() { const t = new URLSearchParams(location.search), i = {}, n = normalizePath(window.location.pathname.substring(1)); return ["utm_source", "utm_medium", "utm_campaign", "utm_content", "utm_term"].forEach((e => { i[e] = t.get(e) || ("utm_campaign" === e ? n : "") })), i } function isMobileDevice() { return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) } function isIOSDevice() { return /iPad|iPhone|iPod/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 } const appConfig = { "catalog-redir": { apn: "com.kyte.catalog", ibi: "com.kytecatalog", isi: "6462521196" }, "control-redir": { apn: "com.kytecontrol", ibi: "com.kytecontrol", isi: "6472947922" }, default: { apn: "com.kyte", ibi: "com.kytepos", isi: "1345983058" } }; initializeLandingPageRedirection();