async function initializeLandingPageRedirection() { try { const t = await fetchConfig(), e = getUTMParams(); if (e.utm_campaign.includes("slg")) return void redirectToCheckout(e); "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", (() => applyClasses(t))) : applyClasses(t), setupClickHandler(t) } catch (t) { console.error("Initialization failed:", t) } } async function fetchConfig() { const t = await fetch("https://growthatkyte.github.io/web/scripts/landing-pages-list.json"); if (!t.ok) throw new Error("Failed to fetch landing pages configuration"); return t.json() } function redirectToCheckout(t) { window.location.href = `https://checkout.auth.kyteapp.com?${new URLSearchParams(t).toString()}` } function applyClasses(t) { const e = normalizePath(window.location.pathname); document.querySelectorAll('input[type="submit"], button[type="submit"]').forEach((i => { t[e] && (i.classList.add(t[e].redirectClass), console.log(`Applied '${t[e].redirectClass}' to buttons for path: ${e}`)) })) } function setupClickHandler(t) { document.addEventListener("click", (e => { const i = e.target.closest('input[type="submit"], button[type="submit"]'); i && t[normalizePath(window.location.pathname)] && (e.preventDefault(), redirectUser(t, getUTMParams(), i)) })) } function redirectUser(t, e, i) { const n = i.classList.contains("cpp-redir") ? handleCPPRedirection : createDynamicLink; window.location.href = n(t[normalizePath(window.location.pathname)].redirectClass, e) } function createDynamicLink(t, e) { const { apn: i, ibi: n, isi: a } = appConfig[t] || appConfig.default; return `https://kyteapp.page.link/?${new URLSearchParams({ link: encodeURIComponent(`https://web.auth.kyteapp.com?${new URLSearchParams(e).toString()}`), apn: i, ibi: n, isi: a, ct: `${t}_${e.utm_campaign}` })}` } function handleCPPRedirection(t, e) { return isMobileDevice() ? isIOSDevice() ? appConfig[t].ios : appConfig[t].android : `https://web.auth.kyteapp.com?${new URLSearchParams(e).toString()}` } function normalizePath(t) { return t.endsWith("/") ? t.slice(0, -1) : t } function getUTMParams() { const t = new URLSearchParams(location.search), e = {}, i = normalizePath(window.location.pathname.substring(1)); return ["utm_source", "utm_medium", "utm_campaign", "utm_content", "utm_term"].forEach((n => { e[n] = t.get(n) || ("utm_campaign" === n ? i : "") })), e } function isMobileDevice() { return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) } function isIOSDevice() { return /iPad|iPhone|iPod/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 } const appConfig = { "catalog-redir": { apn: "com.kyte.catalog", ibi: "com.kytecatalog", isi: "6462521196" }, "control-redir": { apn: "com.kytecontrol", ibi: "com.kytecontrol", isi: "6472947922" }, default: { apn: "com.kyte", ibi: "com.kytepos", isi: "1345983058" } }; initializeLandingPageRedirection();