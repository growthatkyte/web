async function initializeLandingPageRedirection() { try { const t = await fetchConfig(); "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", (() => applyClasses(t))) : applyClasses(t), setupClickHandler(t) } catch (t) { console.error("Initialization failed:", t) } } async function fetchConfig() { const t = await fetch("https://growthatkyte.github.io/web/scripts/landing-pages-list.json"); if (!t.ok) throw new Error("Failed to fetch landing pages configuration"); return t.json() } function applyClasses(t) { const i = normalizePath(window.location.pathname); document.querySelectorAll('input[type="submit"], button[type="submit"]').forEach((e => { t[i] && (e.classList.add(t[i].redirectClass), console.log(`Applied '${t[i].redirectClass}' to buttons for path: ${i}`)) })) } function setupClickHandler(t) { document.addEventListener("click", (i => { const e = i.target.closest('input[type="submit"], button[type="submit"]'); e && (i.preventDefault(), handleRedirection(t, getUTMParams(), e)) })) } function handleRedirection(t, i, e) { const n = t[normalizePath(window.location.pathname)] || appConfig.default, a = e.classList.contains("cpp-redir") ? "cpp-redir" : e.classList.contains("catalog-redir") ? "catalog-redir" : e.classList.contains("control-redir") ? "control-redir" : "default", o = "cpp-redir" === a ? handleCPPRedirection(n, i) : createDynamicLink(a, i); window.location.href = o } function createDynamicLink(t, i) { const { apn: e, ibi: n, isi: a } = appConfig[t], o = new URLSearchParams(i).toString(), c = (Object.keys(i).map((t => `${t}=${i[t]}`)).join("&"), `https://web.auth.kyteapp.com/signup?${encodeURIComponent(o)}`); return `https://kyteapp.page.link/?${new URLSearchParams({ link: c, apn: e, ibi: n, isi: a, ct: `${t}_${i.utm_campaign}`, utm_source: i.utm_source, utm_medium: i.utm_medium, utm_campaign: i.utm_campaign, gclid: i.gclid }).toString()}` } function handleCPPRedirection(t, i) { return isMobileDevice() ? isIOSDevice() ? t.ios : t.android : `https://web.auth.kyteapp.com?${new URLSearchParams(i).toString()}` } function normalizePath(t) { return t.endsWith("/") ? t.slice(0, -1) : t } function getUTMParams() { const t = new URLSearchParams(location.search), i = {}, e = normalizePath(window.location.pathname.substring(1)); return ["utm_source", "utm_medium", "utm_campaign", "utm_content", "utm_term"].forEach((n => { i[n] = t.get(n) || ("utm_campaign" === n ? e : "") })), i } function isMobileDevice() { return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) } function isIOSDevice() { return /iPad|iPhone|iPod/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 } const appConfig = { "catalog-redir": { apn: "com.kyte.catalog", ibi: "com.kytecatalog", isi: "6462521196" }, "control-redir": { apn: "com.kytecontrol", ibi: "com.kytecontrol", isi: "6472947922" }, default: { apn: "com.kyte", ibi: "com.kytepos", isi: "1345983058" } }; initializeLandingPageRedirection();